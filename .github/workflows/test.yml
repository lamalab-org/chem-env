name: Test, Deploy, and Verify
on:
  pull_request:
    branches:
      - main
  pull_request_target:
    types: [opened, reopened, synchronize, labeled]
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  pre_deploy_test:
    name: Run Pre-Deployment Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Run pre-deployment tests
        run: poetry run pytest tests --ignore=tests/test_modal.py
  check_label_and_deploy:
    needs: pre_deploy_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Check for 'safe to deploy' label
        id: check_label
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" || "${{ github.event_name }}" == "pull_request_target" ]]; then
            if [[ ${{ contains(github.event.pull_request.labels.*.name, 'safe to deploy') }} == 'true' ]]; then
              echo "safe_to_deploy=true" >> $GITHUB_OUTPUT
            else
              echo "safe_to_deploy=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "safe_to_deploy=true" >> $GITHUB_OUTPUT
          fi
      - name: Set up Python
        if: steps.check_label.outputs.safe_to_deploy == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install Poetry
        if: steps.check_label.outputs.safe_to_deploy == 'true'
        run: pip install poetry
      - name: Install dependencies
        if: steps.check_label.outputs.safe_to_deploy == 'true'
        run: poetry install
      - name: Deploy to dev
        if: steps.check_label.outputs.safe_to_deploy == 'true'
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
          CHEMENV_NAME: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' && '-dev' || '' }}
        run: poetry run chemenv deploy
      - name: Run post-deployment tests
        if: steps.check_label.outputs.safe_to_deploy == 'true'
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
          CHEMENV_NAME: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' && '-dev' || '' }}
        run: poetry run pytest tests/test_modal.py
